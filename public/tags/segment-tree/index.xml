<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Segment Tree on grid47</title>
    <link>http://localhost:1313/tags/segment-tree/</link>
    <description>Recent content in Segment Tree on grid47</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>www.grid47.com - All rights reserved</copyright>
    <lastBuildDate>Wed, 06 Nov 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/segment-tree/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Leetcode 406: Queue Reconstruction by Height</title>
      <link>http://localhost:1313/leetcode/solution-406-queue-reconstruction-by-height/</link>
      <pubDate>Fri, 27 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/leetcode/solution-406-queue-reconstruction-by-height/</guid>
      <description>&lt;h2 id=&#34;hahahugoshortcode4164s0hbhb&#34;&gt;&lt;figure class=&#34;remote-image&#34; style=&#34;text-align:center; margin: 0;&#34;&gt;&#xA;    &lt;div style=&#34;position: relative; width:900px; max-width:100%; padding-bottom:56.25%; overflow: hidden; border-radius:0px;&#34;&gt;&#xA;      &lt;img src=&#34;https://raw.githubusercontent.com/grid47/list-images/refs/heads/main/list/406.webp&#34; &#xA;           alt=&#34;A series of people with heights, arranging themselves in a queue with each step glowing as they are positioned.&#34; &#xA;           style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; object-fit: cover;&#34;&gt;&#xA;    &lt;/div&gt;&#xA;    &#xA;      &lt;figcaption style=&#34;font-size: 0.5em; font-weight: 300; color:#555; margin-top: 4px; line-height: 1.2;&#34;&gt;&#xA;        Solution to LeetCode 406: Queue Reconstruction by Height Problem&#xA;      &lt;/figcaption&gt;&#xA;    &#xA;  &lt;/figure&gt;&#xA;  &lt;/h2&gt;&#xA;&lt;p&gt;You are given an array of people, where each person is represented by two integers: their height hi and the number of people ki in front of them who have a height greater than or equal to hi. Your task is to reconstruct the queue based on these attributes.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Leetcode 673: Number of Longest Increasing Subsequence</title>
      <link>http://localhost:1313/leetcode/solution-673-number-of-longest-increasing-subsequence/</link>
      <pubDate>Sat, 31 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/leetcode/solution-673-number-of-longest-increasing-subsequence/</guid>
      <description>&lt;h2 id=&#34;hahahugoshortcode4286s0hbhb&#34;&gt;&lt;figure class=&#34;remote-image&#34; style=&#34;text-align:center; margin: 0;&#34;&gt;&#xA;    &lt;div style=&#34;position: relative; width:900px; max-width:100%; padding-bottom:56.25%; overflow: hidden; border-radius:0px;&#34;&gt;&#xA;      &lt;img src=&#34;https://raw.githubusercontent.com/grid47/list-images/refs/heads/main/list/673.webp&#34; &#xA;           alt=&#34;A sequence of numbers where the longest increasing subsequence is highlighted and softly glowing.&#34; &#xA;           style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; object-fit: cover;&#34;&gt;&#xA;    &lt;/div&gt;&#xA;    &#xA;      &lt;figcaption style=&#34;font-size: 0.5em; font-weight: 300; color:#555; margin-top: 4px; line-height: 1.2;&#34;&gt;&#xA;        Solution to LeetCode 673: Number of Longest Increasing Subsequence Problem&#xA;      &lt;/figcaption&gt;&#xA;    &#xA;  &lt;/figure&gt;&#xA;  &lt;/h2&gt;&#xA;&lt;p&gt;Given an integer array &lt;code&gt;nums&lt;/code&gt;, return the number of distinct longest increasing subsequences.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Leetcode 729: My Calendar I</title>
      <link>http://localhost:1313/leetcode/solution-729-my-calendar-i/</link>
      <pubDate>Mon, 26 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/leetcode/solution-729-my-calendar-i/</guid>
      <description>&lt;h2 id=&#34;hahahugoshortcode4315s0hbhb&#34;&gt;&lt;figure class=&#34;remote-image&#34; style=&#34;text-align:center; margin: 0;&#34;&gt;&#xA;    &lt;div style=&#34;position: relative; width:900px; max-width:100%; padding-bottom:56.25%; overflow: hidden; border-radius:0px;&#34;&gt;&#xA;      &lt;img src=&#34;https://raw.githubusercontent.com/grid47/list-images/refs/heads/main/list/729.webp&#34; &#xA;           alt=&#34;A calendar where events are added, with each event softly glowing as it is scheduled.&#34; &#xA;           style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; object-fit: cover;&#34;&gt;&#xA;    &lt;/div&gt;&#xA;    &#xA;      &lt;figcaption style=&#34;font-size: 0.5em; font-weight: 300; color:#555; margin-top: 4px; line-height: 1.2;&#34;&gt;&#xA;        Solution to LeetCode 729: My Calendar I Problem&#xA;      &lt;/figcaption&gt;&#xA;    &#xA;  &lt;/figure&gt;&#xA;  &lt;/h2&gt;&#xA;&lt;p&gt;You are implementing a calendar application where you can add events. Each event has a start time and end time represented by a half-open interval [start, end). An event can only be added if it does not overlap with existing events in the calendar. Return true if the event can be booked successfully, and false if it causes a conflict.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Leetcode 731: My Calendar II</title>
      <link>http://localhost:1313/leetcode/solution-731-my-calendar-ii/</link>
      <pubDate>Sun, 25 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/leetcode/solution-731-my-calendar-ii/</guid>
      <description>&lt;h2 id=&#34;hahahugoshortcode4317s0hbhb&#34;&gt;&lt;figure class=&#34;remote-image&#34; style=&#34;text-align:center; margin: 0;&#34;&gt;&#xA;    &lt;div style=&#34;position: relative; width:900px; max-width:100%; padding-bottom:56.25%; overflow: hidden; border-radius:0px;&#34;&gt;&#xA;      &lt;img src=&#34;https://raw.githubusercontent.com/grid47/list-images/refs/heads/main/list/731.webp&#34; &#xA;           alt=&#34;A calendar with overlapping events, where conflicts are highlighted and softly glowing to indicate double-booking.&#34; &#xA;           style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; object-fit: cover;&#34;&gt;&#xA;    &lt;/div&gt;&#xA;    &#xA;      &lt;figcaption style=&#34;font-size: 0.5em; font-weight: 300; color:#555; margin-top: 4px; line-height: 1.2;&#34;&gt;&#xA;        Solution to LeetCode 731: My Calendar II Problem&#xA;      &lt;/figcaption&gt;&#xA;    &#xA;  &lt;/figure&gt;&#xA;  &lt;/h2&gt;&#xA;&lt;p&gt;You are implementing a calendar system where you can add events. Each event is represented by a start time and an end time, defined as a half-open interval [startTime, endTime). You need to ensure that no more than two events overlap at any given time, or else return false. Your task is to implement a class, MyCalendarTwo, that will book events while preventing triple bookings.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Leetcode 1395: Count Number of Teams</title>
      <link>http://localhost:1313/leetcode/solution-1395-count-number-of-teams/</link>
      <pubDate>Thu, 20 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/leetcode/solution-1395-count-number-of-teams/</guid>
      <description>&lt;hr&gt;&#xA;&lt;p&gt;You are given a list of soldiers, each with a unique rating. You need to form teams of 3 soldiers from this list. A valid team is one where the soldiers&amp;rsquo; ratings are either strictly increasing or strictly decreasing as we move from left to right in the team. The team must satisfy the condition that the indices (i, j, k) follow 0 &amp;lt;= i &amp;lt; j &amp;lt; k &amp;lt; n.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Leetcode 2080: Range Frequency Queries</title>
      <link>http://localhost:1313/leetcode/solution-2080-range-frequency-queries/</link>
      <pubDate>Sat, 13 Apr 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/leetcode/solution-2080-range-frequency-queries/</guid>
      <description>&lt;hr&gt;&#xA;&lt;p&gt;Design a data structure that allows you to efficiently find the frequency of a given value in a subarray. Implement the class &lt;code&gt;RangeFreqQuery&lt;/code&gt; with the following methods:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;RangeFreqQuery(int[] arr)&lt;/code&gt; initializes the data structure.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;int query(int left, int right, int value)&lt;/code&gt; returns the frequency of &lt;code&gt;value&lt;/code&gt; in the subarray from &lt;code&gt;left&lt;/code&gt; to &lt;code&gt;right&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Leetcode 2424: Longest Uploaded Prefix</title>
      <link>http://localhost:1313/leetcode/solution-2424-longest-uploaded-prefix/</link>
      <pubDate>Sat, 09 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/leetcode/solution-2424-longest-uploaded-prefix/</guid>
      <description>&lt;hr&gt;&#xA;&lt;p&gt;You are given a stream of n distinct videos, each represented by a unique number from 1 to n. You need to design a data structure that tracks the longest prefix of uploaded videos at any point in time. A prefix is considered uploaded if all videos from 1 to i (inclusive) have been uploaded to the server.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
