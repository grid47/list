<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Binary Indexed Tree on grid47</title>
    <link>http://localhost:1313/tags/binary-indexed-tree/</link>
    <description>Recent content in Binary Indexed Tree on grid47</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>www.grid47.com - All rights reserved</copyright>
    <lastBuildDate>Wed, 06 Nov 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/binary-indexed-tree/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Leetcode 406: Queue Reconstruction by Height</title>
      <link>http://localhost:1313/leetcode/solution-406-queue-reconstruction-by-height/</link>
      <pubDate>Fri, 27 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/leetcode/solution-406-queue-reconstruction-by-height/</guid>
      <description>&lt;h2 id=&#34;hahahugoshortcode1122s0hbhb&#34;&gt;&lt;figure class=&#34;remote-image&#34; style=&#34;text-align:center; margin: 0;&#34;&gt;&#xA;    &lt;div style=&#34;position: relative; width:900px; max-width:100%; padding-bottom:56.25%; overflow: hidden; border-radius:0px;&#34;&gt;&#xA;      &lt;img src=&#34;https://raw.githubusercontent.com/grid47/list-images/refs/heads/main/list/406.webp&#34; &#xA;           alt=&#34;A series of people with heights, arranging themselves in a queue with each step glowing as they are positioned.&#34; &#xA;           style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; object-fit: cover;&#34;&gt;&#xA;    &lt;/div&gt;&#xA;    &#xA;      &lt;figcaption style=&#34;font-size: 0.5em; font-weight: 300; color:#555; margin-top: 4px; line-height: 1.2;&#34;&gt;&#xA;        Solution to LeetCode 406: Queue Reconstruction by Height Problem&#xA;      &lt;/figcaption&gt;&#xA;    &#xA;  &lt;/figure&gt;&#xA;  &lt;/h2&gt;&#xA;&lt;p&gt;You are given an array of people, where each person is represented by two integers: their height hi and the number of people ki in front of them who have a height greater than or equal to hi. Your task is to reconstruct the queue based on these attributes.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Leetcode 673: Number of Longest Increasing Subsequence</title>
      <link>http://localhost:1313/leetcode/solution-673-number-of-longest-increasing-subsequence/</link>
      <pubDate>Sat, 31 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/leetcode/solution-673-number-of-longest-increasing-subsequence/</guid>
      <description>&lt;h2 id=&#34;hahahugoshortcode1245s0hbhb&#34;&gt;&lt;figure class=&#34;remote-image&#34; style=&#34;text-align:center; margin: 0;&#34;&gt;&#xA;    &lt;div style=&#34;position: relative; width:900px; max-width:100%; padding-bottom:56.25%; overflow: hidden; border-radius:0px;&#34;&gt;&#xA;      &lt;img src=&#34;https://raw.githubusercontent.com/grid47/list-images/refs/heads/main/list/673.webp&#34; &#xA;           alt=&#34;A sequence of numbers where the longest increasing subsequence is highlighted and softly glowing.&#34; &#xA;           style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; object-fit: cover;&#34;&gt;&#xA;    &lt;/div&gt;&#xA;    &#xA;      &lt;figcaption style=&#34;font-size: 0.5em; font-weight: 300; color:#555; margin-top: 4px; line-height: 1.2;&#34;&gt;&#xA;        Solution to LeetCode 673: Number of Longest Increasing Subsequence Problem&#xA;      &lt;/figcaption&gt;&#xA;    &#xA;  &lt;/figure&gt;&#xA;  &lt;/h2&gt;&#xA;&lt;p&gt;Given an integer array &lt;code&gt;nums&lt;/code&gt;, return the number of distinct longest increasing subsequences.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Leetcode 1395: Count Number of Teams</title>
      <link>http://localhost:1313/leetcode/solution-1395-count-number-of-teams/</link>
      <pubDate>Thu, 20 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/leetcode/solution-1395-count-number-of-teams/</guid>
      <description>&lt;hr&gt;&#xA;&lt;p&gt;You are given a list of soldiers, each with a unique rating. You need to form teams of 3 soldiers from this list. A valid team is one where the soldiers&amp;rsquo; ratings are either strictly increasing or strictly decreasing as we move from left to right in the team. The team must satisfy the condition that the indices (i, j, k) follow 0 &amp;lt;= i &amp;lt; j &amp;lt; k &amp;lt; n.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Leetcode 1409: Queries on a Permutation With Key</title>
      <link>http://localhost:1313/leetcode/solution-1409-queries-on-a-permutation-with-key/</link>
      <pubDate>Wed, 19 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/leetcode/solution-1409-queries-on-a-permutation-with-key/</guid>
      <description>&lt;hr&gt;&#xA;&lt;p&gt;You are given a list of positive integers called &lt;code&gt;queries&lt;/code&gt;, each between 1 and &lt;code&gt;m&lt;/code&gt;. You need to process each element in &lt;code&gt;queries&lt;/code&gt; sequentially according to the following rules:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Initially, the permutation &lt;code&gt;P&lt;/code&gt; is &lt;code&gt;[1, 2, 3, ..., m]&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;For each &lt;code&gt;queries[i]&lt;/code&gt;, find the index of &lt;code&gt;queries[i]&lt;/code&gt; in the permutation &lt;code&gt;P&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;After locating &lt;code&gt;queries[i]&lt;/code&gt; in &lt;code&gt;P&lt;/code&gt;, move it to the beginning of the list.&lt;/li&gt;&#xA;&lt;li&gt;Return the list of indices (positions) for each element in &lt;code&gt;queries&lt;/code&gt; as they are processed.&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>Leetcode 2250: Count Number of Rectangles Containing Each Point</title>
      <link>http://localhost:1313/leetcode/solution-2250-count-number-of-rectangles-containing-each-point/</link>
      <pubDate>Wed, 27 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/leetcode/solution-2250-count-number-of-rectangles-containing-each-point/</guid>
      <description>&lt;hr&gt;&#xA;&lt;p&gt;You are given a 2D integer array &lt;code&gt;rectangles&lt;/code&gt;, where each element &lt;code&gt;rectangles[i] = [li, hi]&lt;/code&gt; represents a rectangle with a bottom-left corner at (0, 0), a length &lt;code&gt;li&lt;/code&gt;, and a height &lt;code&gt;hi&lt;/code&gt;. Additionally, you are provided a 2D integer array &lt;code&gt;points&lt;/code&gt;, where each element &lt;code&gt;points[j] = [xj, yj]&lt;/code&gt; represents a point on a 2D plane. The task is to determine the number of rectangles that contain each point. A rectangle contains a point if the point satisfies &lt;code&gt;0 &amp;lt;= xj &amp;lt;= li&lt;/code&gt; and &lt;code&gt;0 &amp;lt;= yj &amp;lt;= hi&lt;/code&gt;. Points on the edges of rectangles are also considered to be inside.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Leetcode 2424: Longest Uploaded Prefix</title>
      <link>http://localhost:1313/leetcode/solution-2424-longest-uploaded-prefix/</link>
      <pubDate>Sat, 09 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/leetcode/solution-2424-longest-uploaded-prefix/</guid>
      <description>&lt;hr&gt;&#xA;&lt;p&gt;You are given a stream of n distinct videos, each represented by a unique number from 1 to n. You need to design a data structure that tracks the longest prefix of uploaded videos at any point in time. A prefix is considered uploaded if all videos from 1 to i (inclusive) have been uploaded to the server.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
