<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Monotonic Queue on grid47</title>
    <link>http://localhost:1313/tags/monotonic-queue/</link>
    <description>Recent content in Monotonic Queue on grid47</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>www.grid47.com - All rights reserved</copyright>
    <lastBuildDate>Wed, 06 Nov 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/monotonic-queue/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Leetcode 918: Maximum Sum Circular Subarray</title>
      <link>http://localhost:1313/leetcode/solution-918-maximum-sum-circular-subarray/</link>
      <pubDate>Wed, 07 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/leetcode/solution-918-maximum-sum-circular-subarray/</guid>
      <description>&lt;hr&gt;&#xA;&lt;p&gt;You are given a circular integer array &lt;code&gt;nums&lt;/code&gt; of length &lt;code&gt;n&lt;/code&gt;. A circular array means that the end of the array connects back to the beginning. Your task is to find the maximum possible sum of a non-empty subarray of &lt;code&gt;nums&lt;/code&gt;, which can wrap around the array. Formally, you need to find the maximum sum of a subarray where the subarray can either be within the linear array or it can wrap around from the end to the beginning.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Leetcode 1438: Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit</title>
      <link>http://localhost:1313/leetcode/solution-1438-longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit/</link>
      <pubDate>Sun, 16 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/leetcode/solution-1438-longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit/</guid>
      <description>&lt;hr&gt;&#xA;&lt;p&gt;Given an array of integers &lt;code&gt;nums&lt;/code&gt; and a positive integer &lt;code&gt;limit&lt;/code&gt;, determine the length of the longest subarray where the absolute difference between the minimum and maximum elements is less than or equal to &lt;code&gt;limit&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Leetcode 1696: Jump Game VI</title>
      <link>http://localhost:1313/leetcode/solution-1696-jump-game-vi/</link>
      <pubDate>Tue, 21 May 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/leetcode/solution-1696-jump-game-vi/</guid>
      <description>&lt;hr&gt;&#xA;&lt;p&gt;You are given a 0-indexed integer array &amp;rsquo;nums&amp;rsquo; and an integer &amp;lsquo;k&amp;rsquo;. You start at index 0 and can jump up to &amp;lsquo;k&amp;rsquo; steps forward at a time. Your task is to find the maximum sum of elements you can get by jumping to the last index, visiting subarrays of unique elements.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Leetcode 2762: Continuous Subarrays</title>
      <link>http://localhost:1313/leetcode/solution-2762-continuous-subarrays/</link>
      <pubDate>Sun, 04 Feb 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/leetcode/solution-2762-continuous-subarrays/</guid>
      <description>&lt;hr&gt;&#xA;&lt;p&gt;You are given a 0-indexed integer array &amp;rsquo;nums&amp;rsquo;. A subarray of &amp;rsquo;nums&amp;rsquo; is called continuous if the absolute difference between any two elements in the subarray is less than or equal to 2. Return the total number of continuous subarrays.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Leetcode 2944: Minimum Number of Coins for Fruits</title>
      <link>http://localhost:1313/leetcode/solution-2944-minimum-number-of-coins-for-fruits/</link>
      <pubDate>Wed, 17 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/leetcode/solution-2944-minimum-number-of-coins-for-fruits/</guid>
      <description>&lt;hr&gt;&#xA;&lt;p&gt;You are given a list of integers &amp;lsquo;prices&amp;rsquo;, where each element &amp;lsquo;prices[i]&amp;rsquo; represents the cost to purchase the &amp;lsquo;i&amp;rsquo;-th fruit. If you buy the &amp;lsquo;i&amp;rsquo;-th fruit at prices[i] coins, you get all subsequent fruits for free. Your task is to determine the minimum number of coins required to purchase all the fruits.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
